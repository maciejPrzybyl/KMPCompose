[versions]
agp = "8.7.3"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activityCompose = "1.9.3"
androidx-lifecycle = "2.8.4"
androidx-navigationCompose = "2.8.0-alpha11"
compose-plugin = "1.7.1"
kotlin = "2.1.0"
kotlinx-coroutines = "1.9.0"
kotlinx-browser = "0.3"
flow-turbine = "1.2.0"
kotlinx-serialization = "1.7.3"
kotlinx-datetime = "0.6.1"
coil = "3.0.4"
koin = "4.0.0"
koin-ksp = "1.4.0"
ksp = "2.1.0-1.0.29"
ktor = "3.1.0-eap-1190"
ktorClient = "3.1.0-eap-1190"
logback = "1.5.12"
room = "2.7.0-alpha12"
sqlite = "2.5.0-alpha12"
datastore = "1.1.1"
google-maps = "19.0.0"
maps-compose = "6.4.0"
secrets = "2.0.1"
kover = "0.9.0"
androidx-ui-test = "1.7.6"
accompanist = "0.37.0"
googleServices = "4.4.2"
firebaseBOM = "33.7.0"

[libraries]
androidx-ui-test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "androidx-ui-test" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-ui-test" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigationCompose" }

kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
flow-turbine = { module = "app.cash.turbine:turbine", version.ref = "flow-turbine" }

kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-browser = { module = "org.jetbrains.kotlinx:kotlinx-browser", version.ref = "kotlinx-browser" }

coil = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
#koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-ksp" }
koin-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-ksp" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorClient" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClient" }
ktor-client-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorClient" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorClient" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorClient" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktorClient" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClient" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
#ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }

room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
sqlite-bundle = { group = "androidx.sqlite", name = "sqlite-bundled", version.ref = "sqlite" }

datastore-core = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }

googlemaps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "maps-compose" }
googlemaps-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "google-maps" }

accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }

firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBOM" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
room = { id = "androidx.room", version.ref = "room" }
secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secrets" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }